# This is a basic workflow to help you get started with Actions

name: Generate loc.gov JSON

# Controls when the action will run. Triggers the workflow on push events
on:
  push:
    branches: [ master ]
  schedule:
    - cron: "0 6 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in
# parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v2

    - name: Set TIMESTAMP env
      run: echo ::set-env name=TIMESTAMP::$(date -d "4 hours ago" +"%Y%m%d") #offset from UTC
    - name: Set TODAY env
      run: echo ::set-env name=TODAY::$(date +"%Y-%m-%d") #offset due to timing of catalog/P1 updates 
    - name: Set YESTERDAY env
      run: echo ::set-env name=YESTERDAY::$(date -d "1 day ago" +"%Y-%m-%d") #offset due to timing of catalog/P1 updates 

    # Run using Python 3.8 for consistency and aiohttp
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: 'x64'

    # Cache dependencies. From:
    # https://github.com/actions/cache/blob/master/examples.md#python---pip
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    # Install dependencies with `pip`
    - name: Install requirements
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        python3 -m pip install -r requirements.txt
    # Generate all json
    - name: Generate json
      run: |
        python3 --version
        python3 loc_json.py -s ${{ env.YESTERDAY }} -e ${{ env.TODAY }} -d "docs/_data/modified_items"
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    # Commits all changed files to the repository
    - name: Commit to the repo
      run: |
        git config --global user.name "GitHub Loc Data Bot"
        git config --global user.email "[bot]@example.com"
        git add .
        # "echo" returns true so the build succeeds, even if no changed files
        git commit -m 'Update generated files' || echo
        git push
